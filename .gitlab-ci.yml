stages:
 - prebuild
 - build
 - pack
 - push

.common: &common
 tags:
  - docker-runner

.version: &version
 extends: .common
 before_script:
  - if [ "${CI_COMMIT_REF_NAME}" == "main" ]; then export
        APP_VER=latest.b${CI_JOB_ID}-${CI_COMMIT_SHA:0:8};
        CI_REGISTRY_VER=latest;
        else export
        APP_VER=${CI_COMMIT_REF_NAME}.b${CI_JOB_ID}-${CI_COMMIT_SHA:0:8};
        CI_REGISTRY_VER=${CI_COMMIT_REF_NAME}; fi
  - if [ -n "${CI_COMMIT_TAG}" ]; then export
    APP_VER=${CI_COMMIT_TAG};
    CI_REGISTRY_VER=${CI_COMMIT_TAG}; fi

.docker:
 extends: .version
 image: docker:stable
 cache:
  policy: pull

.docker:build:
 extends: .docker
 script:
  - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  - cd ${WORKDIR}
  - docker build --force-rm --pull --label image.version=${APP_VER} -t ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_PIPELINE_ID} .
#  - docker push ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_PIPELINE_ID}

.docker:push:
 extends: .docker
 variables:
  GIT_STRATEGY: none
 dependencies: []
 script:
  - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_PIPELINE_ID}
  - docker tag ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_PIPELINE_ID} ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_REGISTRY_VER}
  - docker push ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_REGISTRY_VER}


pack:docker:back:
 stage: pack
 extends: .docker:build
 variables:
  WORKDIR: back
  IMAGE_NAME: back
 only:
  - dev
  - main

push:docker:back:
 stage: push
 extends: .docker:push
 variables:
  IMAGE_NAME: back
 only:
  - dev
  - main

pack:docker:front:
 stage: pack
 extends: .docker:build
 variables:
  WORKDIR: front
  IMAGE_NAME: front
 only:
  - dev
  - main

push:docker:front:
 stage: push
 extends: .docker:push
 variables:
  IMAGE_NAME: front
 only:
  - dev
  - main
